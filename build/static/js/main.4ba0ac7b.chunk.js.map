{"version":3,"sources":["assets/logo.svg","constants/base.js","components/sidebar.js","pages/Form.js","constants/auth.js","pages/Login.js","constants/listData.js","pages/List.js","constants/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","sideBar","className","id","onClick","FirebaseApp","auth","signOut","to","pathname","typeList","icon","faTooth","faGrimace","faSave","withRouter","form","useRef","handleSaveData","useCallback","event","a","async","preventDefault","target","elements","name","lastName","number","exNumber","email","direction","type","allData","value","database","ref","push","swal","title","button","reset","console","log","el","onSubmit","placeholder","rows","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","onAuthStateChanged","Provider","history","handleLogin","password","signInWithEmailAndPassword","alert","useContext","src","logo","alt","useFetchData","currentList","list","setList","error","setError","once","then","snap","Object","values","val","catch","location","message","map","element","PrivateRoute","RouteComponent","component","rest","render","routeProps","App","exact","path","Form","List","Login","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ba0ac7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.dbb1f262.svg\";","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-database\"\n\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n});\n\nexport default app;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FirebaseApp from \"../constants/base\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTooth, faGrimace, faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./styles/sideBar.css\";\nconst sideBar = () => {\n  return (\n    <>\n      <div className=\"sideBar\">\n        <button id=\"signOut\" onClick={() => FirebaseApp.auth().signOut()}>\n          Salir\n        </button>\n        <Link to={{ pathname: \"List\", typeList: \"Pacientes de operatoria\" }}>\n          <FontAwesomeIcon className=\"icon\" icon={faTooth} />\n        </Link>\n        <Link to={{ pathname: \"List\", typeList: \"Pacientes de ortodoncia\" }}>\n          <FontAwesomeIcon className=\"icon\" icon={faGrimace} />\n        </Link>\n        <Link to=\"/\">\n          <FontAwesomeIcon className=\"icon\" icon={faSave} />\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default sideBar;\n","import React, { useCallback, useRef } from \"react\";\nimport Sidebar from \"../components/sidebar\";\nimport { withRouter } from \"react-router\";\nimport swal from \"sweetalert\";\nimport FirebaseApp from \"../constants/base\";\nimport \"./styles/form.css\";\n\nconst Form = () => {\n  let form = useRef();\n  const handleSaveData = useCallback(async event => {\n    event.preventDefault();\n    const {\n      name,\n      lastName,\n      number,\n      exNumber,\n      email,\n      id,\n      direction,\n      type\n    } = event.target.elements;\n\n    const allData = {\n      name: name.value,\n      lastName: lastName.value,\n      number: number.value,\n      exNumber: exNumber.value,\n      email: email.value,\n      id: id.value,\n      direction: direction.value,\n      type: type.value\n    };\n    try {\n      await FirebaseApp.database()\n        .ref(type.value)\n        .push(allData);\n\n      swal({\n        title: \"Contacto guardado üòé\",\n        icon: \"success\",\n        button: \"Listo\"\n      });\n\n      form.reset();\n    } catch (error) {\n      console.log(error);\n      swal({\n        title: \"Error,üë≤üèº\",\n        icon: \"error\",\n        button: \"Listo\"\n      });\n    }\n  }, []);\n  console.log(form);\n\n  return (\n    <>\n      <Sidebar />\n      <section className=\"formSection\">\n        <div className=\"titleForm\">\n          <h2>Formulario de ingreso de pacientes</h2>\n        </div>\n        <div className=\"formWrapper\">\n          <form ref={el => (form = el)} onSubmit={handleSaveData} name=\"form\">\n            <input\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Nombre\"\n              type=\"text\"\n            ></input>\n            <br />\n            <input\n              id=\"lastName\"\n              name=\"lastName\"\n              placeholder=\"Apellidos\"\n              type=\"text\"\n            ></input>\n            <br />\n            <input\n              id=\"number\"\n              name=\"number\"\n              placeholder=\"N√∫mero \"\n              type=\"number\"\n            ></input>\n            <br />\n            <input\n              id=\"exNumber\"\n              name=\"exNumber\"\n              placeholder=\"N√∫mero extra\"\n              type=\"number\"\n            ></input>\n            <br />\n            <input\n              id=\"mail\"\n              name=\"email\"\n              placeholder=\"Correo electr√≥nico\"\n              type=\"text\"\n            ></input>\n            <br />\n            <input\n              id=\"id\"\n              name=\"id\"\n              placeholder=\"N√∫mero de cedula\"\n              type=\"number\"\n            ></input>\n            <br />\n            <textarea\n              rows=\"4\"\n              id=\"direction\"\n              placeholder=\"Direcci√≥n\"\n              name=\"direction\"\n              type=\"text\"\n            ></textarea>\n            <br />\n            <label>Paciente de:</label> <br />\n            <select name=\"type\" id=\"type\">\n              <option value=\"Pacientes de ortodoncia\">Ortodoncia</option>\n              <option value=\"Pacientes de operatoria\">Operatoria</option>\n            </select>{\" \"}\n            <br />\n            <p>*Recuerde seleccionar correctamente el tipo de paciente*</p>\n            <button type=\"submit\"> Enviar </button>\n          </form>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default withRouter(Form);\n","import React, { useEffect, useState } from \"react\";\nimport FirebaseApp from \"./base\";\n\nexport const AuthContext = React.createContext(); /////global state/////\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    FirebaseApp.auth().onAuthStateChanged(setCurrentUser);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ currentUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport FirebaseApp from \"../constants/base\";\nimport { AuthContext } from \"../constants/auth\";\nimport \"./styles/login.css\";\nimport logo from \"../assets/logo.svg\";\n\n\n//////Login page////////\n\n\nconst Login = ({ history }) => {\n  const handleLogin = useCallback(\n    async event => {\n      event.preventDefault();\n      const { email, password } = event.target.elements;\n      try {\n        await FirebaseApp.auth().signInWithEmailAndPassword(\n          email.value,\n          password.value\n        );\n        history.push(\"/\");\n      } catch (error) {\n        alert(error);\n      }\n    },\n    [history]\n  );\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"loginWrapper\">\n      <div className=\"loginContein\">\n        <img className=\"logo\" src={logo} alt=\"\"></img>\n        <form onSubmit={handleLogin} name=\"loginForm\" className=\"Login-form\">\n          <input\n            id=\"mailLogin\"\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Correo eletr√≥nico\"\n          ></input>{\" \"}\n          <br />\n          <input\n            id=\"mailPassword\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Contrase√±a\"\n          ></input>\n          <br />\n          <button className=\"buttonLogin\" type=\"submit\">\n            Entrar{\" \"}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Login);\n","import React, { useEffect } from \"react\";\nimport FirebaseApp from \"./base\";\n\nconst useFetchData = currentList => {\n  const [list, setList] = React.useState([]);\n  const [error, setError] = React.useState(null);\n\n  useEffect(() => {\n    FirebaseApp.database()\n      .ref(currentList)\n      .once(\"value\")\n      .then(snap => {\n        setList(Object.values(snap.val()));\n      })\n      .catch(error => {\n        setError(error);\n        console.log(error);\n      });\n  }, [currentList]);\n\n  return { list, error };\n};\nexport default useFetchData;\n","import React from \"react\";\nimport Sidebar from \"../components/sidebar\";\nimport { withRouter } from \"react-router\";\nimport swal from \"sweetalert\";\nimport useFetchData from \"../constants/listData\";\nimport \"./styles/list.css\";\n\nconst List = typeList => {\n  const { list, error } = useFetchData(typeList.location.typeList);\n  if (error) {\n    return swal({\n      title: error.message\n    });\n  }\n  console.log(list);\n\n  return (\n    <>\n      <Sidebar />\n      <div className=\"listWrapper\">\n        <h2>{typeList.location.typeList}</h2>\n        {list.map(element => (\n          <>\n            <div className=\"item\">\n              <h3>\n                <b>Nombre:</b> {element.name} {element.lastName}\n              </h3>\n              <p>\n                <b>Correo electr√≥nico:</b>\n                {element.email}\n              </p>\n              <p>\n                <b>N√∫mero:</b>\n                {element.number}\n              </p>\n              <p>\n                <b>N√∫mero extra:</b>\n                {element.exNumber}\n              </p>\n              <p>\n                <b>N√∫mero de cedula:</b>\n                {element.id}\n              </p>\n              <p>\n                <b>Direcci√≥n:</b>\n                {element.direction}\n              </p>\n            </div>\n          </>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(List);\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../constants/auth\";\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const { currentUser } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={\"/login\"} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Form from \"./pages/Form\";\nimport Login from \"./pages/Login\";\nimport List from \"./pages/List\";\nimport { AuthProvider } from \"./constants/auth\";\nimport PrivateRoute from \"./constants/PrivateRoute\";\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <div>\n          <PrivateRoute exact path=\"/\" component={Form} />\n          <PrivateRoute exact path=\"/List\" component={List} />\n          <Route exact path=\"/login\" component={Login} />\n        </div>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/global.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}